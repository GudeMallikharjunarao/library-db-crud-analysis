SELECT * from employees;
SELECT * from books;
SELECT * from members;
SELECT * from issued_status;
select * from return_status;

--Task-1

"978-1-60129-456-2', 'To Kill a Mockingbird', 'Classic', 6.00, 'yes', 'Harper Lee', 'J.B. Lippincott & Co.')"

insert into books(isbn,book_title,category,rental_price,status,author,publisher)
values
('978-1-60129-456-2', 'To Kill a Mockingbird', 'Classic', 6.00, 'yes', 'Harper Lee', 'J.B. Lippincott & Co.');


--Task-2 Updating an existing members address

update
set
where

-- Task 3: Delete a Record from the Issued Status Table
-- Objective: Delete the record with issued_id = 'IS121' from the issued_status table. 


delete from issued_status
where issued_id = 'IS121';


-- Task 4: Retrieve All Books Issued by a Specific Employee
-- Objective: Select all books issued by the employee with emp_id = 'E101'.

select * from issued_status
where issued_emp_id = 'E101';

-- Task 5: List Members Who Have Issued More Than One Book

select issued_emp_id,
count(issued_id) as total_book_issued
from issued_status
group by issued_emp_id
having count(issued_member_id)>1;

-- Task 6: Create Summary Tables**: Used CTAS to generate new tables based on query results - each book and total book_issued_cnt

CREATE TABLE book_counts 
AS
select b.isbn,b.book_title,
count(i.issued_id) as no_of_issues
from books b
join issued_status i
on i.issued_book_isbn = b.isbn
group by 1,2;


-- Task 7. **Retrieve All Books in a Specific Category:

select * from books
where category = 'History';

-- Task 8: Find Total Rental Income by Category:
select * from issued_status;

select b.category,sum(b.rental_price) as Income_by_category
from books b
join issued_status i on
b.isbn = i.issued_book_isbn
group by 1;

--Task-9. List Members Who Registered in the Last 180 Days:

insert into members(member_id,member_name,member_address,reg_date)
values
('C118', 'sam','145 main st','2024-06-01'),
('C119','john','133 Main st','2024-05-01');

SELECT * FROM members
WHERE reg_date >= CURRENT_DATE - INTERVAL '180 days';

-Task -10. List Employees with Their Branch Manager's Name and their branch details:

SELECT 
    e1.emp_id,
    e1.emp_name,
    e1.position,
    e1.salary,
    b.*,
    e2.emp_name as manager
FROM employees as e1
JOIN 
branch as b
ON e1.branch_id = b.branch_id    
JOIN
employees as e2
ON e2.emp_id = b.manager_id;

--Task 11. Create a Table of Books with Rental Price Above a Certain Threshold:

create table expensive_books
as
select * from books
where rental_price > (select avg(rental_price) from books);

---Task 12: Retrieve the List of Books Not Yet Returned--

select * from issued_status i
join return_status r
on i.issued_id = r.issued_id
where r.return_id is null;


